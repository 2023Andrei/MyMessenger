#!/bin/bash
echo "üìû –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä..."

# 1. –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Google –¥–æ–±–∞–≤–ª–µ–Ω –≤ settings.gradle.kts
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ settings.gradle.kts..."
if ! grep -q "google()" settings.gradle.kts; then
    sed -i '/repositories {/a \        google()' settings.gradle.kts
fi

# 2. –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ WebRTC
echo "üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ build.gradle.kts..."
sed -i '/implementation("androidx.constraintlayout:constraintlayout:2.1.4")/a \    implementation("org.webrtc:google-webrtc:1.0.+")' app/build.gradle.kts

# 3. –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤ AndroidManifest.xml
echo "üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ AndroidManifest.xml..."
if ! grep -q "CAMERA" app/src/main/AndroidManifest.xml; then
    sed -i '/<uses-permission android:name="android.permission.RECORD_AUDIO" \/>/a \    <uses-permission android:name="android.permission.CAMERA" \/>' app/src/main/AndroidManifest.xml
fi
if ! grep -q "MODIFY_AUDIO_SETTINGS" app/src/main/AndroidManifest.xml; then
    sed -i '/<uses-permission android:name="android.permission.RECORD_AUDIO" \/>/a \    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" \/>' app/src/main/AndroidManifest.xml
fi

# 4. –°–æ–∑–¥–∞–µ–º CallActivity.kt
echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ CallActivity.kt..."
mkdir -p app/src/main/java/com/example/mymessenger/
cat > app/src/main/java/com/example/mymessenger/CallActivity.kt << 'EOL'
package com.example.mymessenger

import android.os.Bundle
import android.util.Log
import android.view.SurfaceView
import android.view.View
import androidx.appcompat.app.AppCompatActivity
import org.webrtc.*
import org.webrtc.PeerConnection.IceServer
import java.util.*

class CallActivity : AppCompatActivity() {

    private var peerConnection: PeerConnection? = null
    private var localVideoView: SurfaceViewRenderer? = null
    private var remoteVideoView: SurfaceViewRenderer? = null
    private var localVideoTrack: VideoTrack? = null
    private var localAudioTrack: AudioTrack? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_call)

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebRTC
        initializeWebRTC()

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        setupUI()
    }

    private fun initializeWebRTC() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PeerConnectionFactory
        val initializationOptions = PeerConnectionFactory.InitializationOptions.builder(this)
            .createInitializationOptions()
        PeerConnectionFactory.initialize(initializationOptions)

        // –°–æ–∑–¥–∞–Ω–∏–µ PeerConnectionFactory
        val peerConnectionFactory = PeerConnectionFactory.builder().createPeerConnectionFactory()

        // –°–æ–∑–¥–∞–Ω–∏–µ –∞—É–¥–∏–æ –∏ –≤–∏–¥–µ–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        val videoSource = peerConnectionFactory.createVideoSource(false)
        val audioSource = peerConnectionFactory.createAudioSource(MediaConstraints())
        localVideoTrack = peerConnectionFactory.createVideoTrack("video", videoSource)
        localAudioTrack = peerConnectionFactory.createAudioTrack("audio", audioSource)

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SurfaceView –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ
        localVideoView = findViewById<SurfaceViewRenderer>(R.id.local_video_view).apply {
            init(EglBase.create().eglBaseContext, null)
            setEnableHardwareScaler(true)
            setMirror(true)
        }

        remoteVideoView = findViewById<SurfaceViewRenderer>(R.id.remote_video_view).apply {
            init(EglBase.create().eglBaseContext, null)
            setEnableHardwareScaler(true)
        }

        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ
        localVideoTrack?.addSink(object : VideoSink {
            override fun onFrame(frame: VideoFrame) {
                localVideoView?.onFrame(frame)
            }
        })

        // –°–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ PeerConnection
        peerConnection = createPeerConnection()
    }

    private fun setupUI() {
        findViewById<View>(R.id.hangup_button).setOnClickListener {
            finish()
        }
    }

    private fun createPeerConnection(): PeerConnection? {
        val iceServers = listOf(
            IceServer.builder("stun:stun.l.google.com:19302").createIceServer()
        )

        val rtcConfig = PeerConnection.RTCConfiguration(iceServers)
        rtcConfig.tcpCandidatePolicy = PeerConnection.TcpCandidatePolicy.DISABLED
        rtcConfig.bundlePolicy = PeerConnection.BundlePolicy.MAXBUNDLE
        rtcConfig.rtcpMuxPolicy = PeerConnection.RtcpMuxPolicy.REQUIRE
        rtcConfig.continualGatheringPolicy = PeerConnection.ContinualGatheringPolicy.GATHER_CONTINUALLY
        rtcConfig.keyType = PeerConnection.KeyType.ECDSA

        return peerConnectionFactory.createPeerConnection(
            rtcConfig,
            object : PeerConnection.Observer {
                override fun onIceCandidate(candidate: IceCandidate) {
                    Log.d("CallActivity", "ICE –∫–∞–Ω–¥–∏–¥–∞—Ç: ${candidate.sdp}")
                }
                override fun onAddStream(stream: MediaStream) {
                    if (stream.videoTracks.size > 0) {
                        remoteVideoView?.onFrame(stream.videoTracks[0].frame)
                    }
                }
                // –î—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã Observer...
                override fun onSignalingChange(state: PeerConnection.SignalingState) {}
                override fun onIceConnectionChange(state: PeerConnection.IceConnectionState) {}
                override fun onIceConnectionReceivingChange(receiving: Boolean) {}
                override fun onIceGatheringChange(state: PeerConnection.IceGatheringState) {}
                override fun onIceCandidatesRemoved(candidates: Array<out IceCandidate>) {}
                override fun onRemoveStream(stream: MediaStream) {}
                override fun onDataChannel(channel: DataChannel) {}
                override fun onRenegotiationNeeded() {}
                override fun onAddTrack(receiver: RtpReceiver, mediaStreams: Array<out MediaStream>) {}
            })
    }

    override fun onDestroy() {
        peerConnection?.close()
        peerConnection = null
        super.onDestroy()
    }
}
EOL

# 5. –°–æ–∑–¥–∞–µ–º layout –¥–ª—è –∑–≤–æ–Ω–∫–∞
echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ activity_call.xml..."
mkdir -p app/src/main/res/layout/
cat > app/src/main/res/layout/activity_call.xml << 'EOL'
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <org.webrtc.SurfaceViewRenderer
        android:id="@+id/remote_video_view"
        android:layout_width="match_parent"
        android:layout_height="match_parent" />

    <org.webrtc.SurfaceViewRenderer
        android:id="@+id/local_video_view"
        android:layout_width="120dp"
        android:layout_height="160dp"
        android:layout_alignParentEnd="true"
        android:layout_alignParentTop="true"
        android:layout_margin="16dp" />

    <ImageButton
        android:id="@+id/hangup_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:background="@drawable/circle_red"
        android:src="@android:drawable/ic_menu_close_clear_cancel"
        android:tint="#FFFFFF"
        android:padding="16dp"
        android:contentDescription="–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–∑–æ–≤" />

</RelativeLayout>
EOL

# 6. –°–æ–∑–¥–∞–µ–º drawable –¥–ª—è –∫–Ω–æ–ø–∫–∏
echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ circle_red.xml..."
mkdir -p app/src/main/res/drawable/
cat > app/src/main/res/drawable/circle_red.xml << 'EOL'
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="oval">
    <solid android:color="#FF0000" />
</shape>
EOL

# 7. –û–±–Ω–æ–≤–ª—è–µ–º MainActivity –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∑–≤–æ–Ω–∫–æ–≤
echo "üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ MainActivity.kt..."
if ! grep -q "CallActivity" app/src/main/java/com/example/mymessenger/MainActivity.kt; then
    sed -i '/buttonCall.setOnClickListener {/a \            val intent = Intent(this, CallActivity::class.java)\n            startActivity(intent)' app/src/main/java/com/example/mymessenger/MainActivity.kt
fi

# 8. –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –º–∞–Ω–∏—Ñ–µ—Å—Ç
echo "üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ AndroidManifest.xml..."
if ! grep -q "CallActivity" app/src/main/AndroidManifest.xml; then
    sed -i '/<application/a \        <activity\n            android:name=".CallActivity"\n            android:exported="false">\n        <\/activity>' app/src/main/AndroidManifest.xml
fi

# 9. –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
echo "üîß –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∑–≤–æ–Ω–∫–æ–≤..."
./gradlew clean assembleDebug

if [ $? -eq 0 ]; then
    echo -e "\n‚úÖ –ó–≤–æ–Ω–∫–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!"
    echo "---------------------------------------------------"
    echo "–ì–æ—Ç–æ–≤—ã–π APK: app/build/outputs/apk/debug/app-debug.apk"
    echo "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–æ–≤—ã–π APK –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω"
    echo "2. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ '–ü–æ–∑–≤–æ–Ω–∏—Ç—å'"
    echo "3. –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∑–≤–æ–Ω–∫–æ–≤:"
    echo "   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Firebase –¥–ª—è —á–∞—Ç–∞"
    echo "   - –†–∞–∑–≤–µ—Ä–Ω–∏—Ç–µ —Å–∏–≥–Ω–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä (–º–æ–∂–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ –Ω–∞ Render.com)"
else
    echo -e "\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –ø—Ä–æ–µ–∫—Ç–∞"
    echo "---------------------------------------------------"
    echo "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
    echo "1. –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    echo "2. –ü—Ä–æ–±–ª–µ–º—ã —Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º Google –¥–ª—è WebRTC"
    echo "3. –û—à–∏–±–∫–∏ –≤ –∫–æ–¥–µ"
    echo -e "\n–†–µ—à–µ–Ω–∏–µ:"
    echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"
    echo "2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ settings.gradle.kts –µ—Å—Ç—å 'google()'"
    echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–±–æ—Ä–∫—É —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º: ./gradlew assembleDebug --info"
fi
