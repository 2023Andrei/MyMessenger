#!/bin/bash
echo "üîë –í–∫–ª—é—á–µ–Ω–∏–µ Google-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ Firebase..."

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Firebase CLI
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Firebase CLI..."
if ! firebase login:list | grep -q "logged in"; then
    echo "‚ö†Ô∏è –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ Firebase CLI. –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Ö–æ–¥..."
    firebase login --no-localhost
    if [ $? -ne 0 ]; then
        echo "‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Firebase CLI"
        echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º:"
        echo "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ session ID –∏–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"
        echo "2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
        echo "3. –í–≤–µ–¥–∏—Ç–µ session ID –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
        echo "4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª"
        echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å: firebase login --no-localhost"
        exit 1
    fi
fi
echo "‚úÖ –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ Firebase CLI"

# 2. –í—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ Firebase
echo "üîß –í—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ Firebase..."
if [ -z "$(firebase projects:list --json | jq -r '.projects[].projectId')" ]; then
    echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ Firebase"
    echo "1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ https://console.firebase.google.com/"
    echo "2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç"
    echo "3. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ —ç—Ç–æ–º—É —Å–∫—Ä–∏–ø—Ç—É"
    exit 1
fi

# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
firebase projects:list

# –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞
read -p "–í–≤–µ–¥–∏—Ç–µ ID –ø—Ä–æ–µ–∫—Ç–∞ Firebase, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω—É–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å Google-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é: " projectId

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞
firebase use $projectId --add
echo "‚úÖ –í—ã–±—Ä–∞–Ω –ø—Ä–æ–µ–∫—Ç: $projectId"

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞..."
if ! firebase projects:list | grep -q "$projectId"; then
    echo "‚ùå –ü—Ä–æ–µ–∫—Ç $projectId –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ ID"
    exit 1
fi

# 4. –í–∫–ª—é—á–µ–Ω–∏–µ Google-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ REST API (–±–µ–∑ –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞)
echo "üîß –í–∫–ª—é—á–µ–Ω–∏–µ Google-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ REST API..."
echo "‚ÑπÔ∏è –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –±–µ–∑–æ–ø–∞—Å–µ–Ω –∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –æ—Å—Ç–∞–≤–ª—è—Ç—å —Ç–µ—Ä–º–∏–Ω–∞–ª –æ—Ç–∫—Ä—ã—Ç—ã–º"

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞
accessToken=$(firebase login:ci --no-localhost 2>/dev/null | grep -v "https://")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–µ–Ω –ª–∏ —Ç–æ–∫–µ–Ω
if [ -z "$accessToken" ]; then
    echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    echo "–í—ã–ø–æ–ª–Ω—è–µ–º —Ä—É—á–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å:"
    echo "1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ –Ω–æ–≤–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ: firebase login:ci"
    echo "2. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞"
    echo "3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –Ω–∏–∂–µ"
    read -sp "–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω Firebase: " accessToken
    echo
fi

# –í–∫–ª—é—á–∞–µ–º Google-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
echo "üîÑ –í–∫–ª—é—á–µ–Ω–∏–µ Google-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ $projectId..."
curl -s -o /dev/null -w "%{http_code}" -X PATCH \
  -H "Authorization: Bearer $accessToken" \
  -H "Content-Type: application/json" \
  -d '{
    "config": {
      "signIn": {
        "allowDuplicateEmails": false,
        "email": {
          "enabled": true,
          "passwordRequired": true
        },
        "phoneNumber": {
          "enabled": false
        },
        "anonymous": {
          "enabled": false
        },
        "apple": {
          "enabled": false
        },
        "facebook": {
          "enabled": false
        },
        "github": {
          "enabled": false
        },
        "google": {
          "enabled": true
        },
        "microsoft": {
          "enabled": false
        },
        "playGames": {
          "enabled": false
        },
        "twitter": {
          "enabled": false
        },
        "yahoo": {
          "enabled": false
        }
      }
    }
  }' "https://identitytoolkit.googleapis.com/admin/v2/projects/$projectId/config" > /tmp/firebase_auth_status.txt

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
authStatus=$(cat /tmp/firebase_auth_status.txt)
rm /tmp/firebase_auth_status.txt

if [ "$authStatus" = "200" ]; then
    echo "‚úÖ Google-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ $projectId!"
    echo "---------------------------------------------------"
    echo "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:"
    echo "1. –î–æ–±–∞–≤–∏—Ç—å Google-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ –≤–∞—à –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä"
    echo "2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ Firebase Console:"
    echo "   https://console.firebase.google.com/project/$projectId/authentication/providers"
    echo "3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ Google –≤ –≤–∞—à–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ Google-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (HTTP —Å—Ç–∞—Ç—É—Å: $authStatus)"
    echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:"
    echo "1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞"
    echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å ID –ø—Ä–æ–µ–∫—Ç–∞"
    echo "3. –í—Ä—É—á–Ω—É—é –≤–∫–ª—é—á–∏—Ç–µ Google-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ Firebase Console:"
    echo "   a) –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ https://console.firebase.google.com/"
    echo "   b) –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç $projectId"
    echo "   c) –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª Authentication ‚Üí Sign-in method"
    echo "   d) –ù–∞–π–¥–∏—Ç–µ Google –≤ —Å–ø–∏—Å–∫–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –∏ –Ω–∞–∂–º–∏—Ç–µ '–í–∫–ª—é—á–∏—Ç—å'"
fi

# 5. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –¥–ª—è Google-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo -e "\nüîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ Google-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
if ! grep -q "implementation(\"com.google.firebase:firebase-auth" app/build.gradle.kts; then
    sed -i '/implementation("com.infobip:google-webrtc:1.0.35530")/a \    implementation("com.google.firebase:firebase-auth:22.3.0")' app/build.gradle.kts
    echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å Firebase Auth –¥–æ–±–∞–≤–ª–µ–Ω–∞"
fi

cat > app/src/main/java/com/example/mymessenger/AuthActivity.kt << 'EOF'
package com.example.mymessenger

import android.content.Intent
import android.os.Bundle
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import com.google.android.gms.auth.api.signin.GoogleSignIn
import com.google.android.gms.auth.api.signin.GoogleSignInAccount
import com.google.android.gms.auth.api.signin.GoogleSignInClient
import com.google.android.gms.auth.api.signin.GoogleSignInOptions
import com.google.android.gms.common.api.ApiException
import com.google.firebase.auth.FirebaseAuth
import com.google.firebase.auth.GoogleAuthProvider
import com.google.firebase.firestore.ktx.firestore
import com.google.firebase.ktx.Firebase

class AuthActivity : AppCompatActivity() {

    private lateinit var auth: FirebaseAuth
    private lateinit var googleSignInClient: GoogleSignInClient
    private val RC_SIGN_IN = 9001

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
        auth = FirebaseAuth.getInstance()
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        if (auth.currentUser != null) {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤–æ—à–µ–ª, –ø–µ—Ä–µ–π—Ç–∏ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —ç–∫—Ä–∞–Ω—É
            startActivity(Intent(this, MainActivity::class.java))
            finish()
            return
        }
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Sign In
        val gso = GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
            .requestIdToken(getString(R.string.default_web_client_id))
            .requestEmail()
            .build()
            
        googleSignInClient = GoogleSignIn.getClient(this, gso)
        
        // –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤—Ö–æ–¥–∞
        signInWithGoogle()
    }

    private fun signInWithGoogle() {
        val signInIntent = googleSignInClient.signInIntent
        startActivityForResult(signInIntent, RC_SIGN_IN)
    }

    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
        super.onActivityResult(requestCode, resultCode, data)

        // –†–µ–∑—É–ª—å—Ç–∞—Ç, –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—ã–π –∏–∑ Intent signIn
        if (requestCode == RC_SIGN_IN) {
            val task = GoogleSignIn.getSignedInAccountFromIntent(data)
            try {
                // –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ Google
                val account = task.getResult(ApiException::class.java)
                firebaseAuthWithGoogle(account)
            } catch (e: ApiException) {
                // –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞
                Toast.makeText(this, "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: ${e.statusCode}", Toast.LENGTH_SHORT).show()
                finish()
            }
        }
    }

    private fun firebaseAuthWithGoogle(acct: GoogleSignInAccount) {
        val credential = GoogleAuthProvider.getCredential(acct.idToken, null)
        auth.signInWithCredential(credential)
            .addOnCompleteListener(this) { task ->
                if (task.isSuccessful) {
                    // –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞
                    saveUserToFirestore(acct)
                    startActivity(Intent(this, MainActivity::class.java))
                    finish()
                } else {
                    // –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
                    Toast.makeText(this, "–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏", Toast.LENGTH_SHORT).show()
                    finish()
                }
            }
    }

    private fun saveUserToFirestore(acct: GoogleSignInAccount) {
        val user = hashMapOf(
            "uid" to auth.currentUser?.uid,
            "email" to acct.email,
            "displayName" to acct.displayName,
            "photoUrl" to acct.photoUrl?.toString()
        )

        Firebase.firestore.collection("users")
            .document(auth.currentUser?.uid ?: "")
            .set(user)
    }
}
